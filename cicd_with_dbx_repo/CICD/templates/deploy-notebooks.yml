# these parameteres will be passed by master file (cicd-pipelines.yml)
parameters:
  - name: stageId
    type: string
  - name: dependsOn
    type: object
    default: []
  - name: env
    type: string
  - name: environmentName
    type: string
  - name: resourceGroupName
    type: string
  - name: serviceConnection
    type: string
  - name: notebookPath
    type: string


stages:
  - stage: "${{ parameters.stageId }}"
    displayName: "Deploying to [${{upper(parameters.env)}}] Environment"
    dependsOn: ${{ parameters.dependsOn }}
    jobs:
      - deployment: Deploy
        displayName: "Deploying Databricks Notebooks"
        environment: ${{ parameters.environmentName }}
        strategy: 
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: AzureCLI@2
                  inputs:
                  # here we are passing serviceconnection because it will complete info about our resource group and subscription.
                    azureSubscription: ${{parameters.serviceConnection}}
                    scriptType: "pscore"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                      # By running this command, you configure the Azure CLI to automatically install any required extensions without asking for user confirmation
                      az config set extension.use_dynamic_install=yes_without_prompt
                     
                      # in this script we are assigning the databricks workspace name to given variable
                      $databricksWorkspace = (az resource list --resource-group ${{parameters.resourceGroupName}} -- query "[?type=='Microsoft.Databricks/workspaces']" | ConvertFrom-Json)[0]

                      $databricksWorkspaceInfo = (az databricks workspace show --ids $databricksWorkspace.id | ConvertFrom-Json)

                      # here for authentication purpose we need Token, thats why we call DatabricskToken.ps1 file that will return us the token.
                      $bearerToken = $(Build.Repository.LocalPath)/CICD/scripts/DatabricksToken.ps1 -databricksWorkspaceResourceId $databricksWorkspaceInfo.id -databricksWorkspaceUrl $databricksWorkspaceInfo.workspaceUrl

                      # using these 3 lines we will deploy our code from main branch to Live folder of Dev Workspace.
                      Install-Module -Name azure.databrick.cicd.tools -Force -Scope CurrentUser
                      Import-Module -Name azure.databricks.cicd.tools
                      Import-DatabricksFolder -BearerToken $bearerToken -Region $databricksWorkspaceInfo.location -LocalPath $(Build.Repository.LocalPath)/${{parameters.notebookPath}} -DatabricksPath '/live' -Clean




